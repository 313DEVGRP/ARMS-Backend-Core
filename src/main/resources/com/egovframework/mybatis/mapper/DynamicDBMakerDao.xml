<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.arms.util.dynamicdbmaker.mapper.DynamicDBMakerDao">

    <update id="ddlLogExecute" parameterType="com.arms.util.dynamicdbmaker.model.DynamicDBMakerEntity">

        CREATE TABLE IF NOT EXISTS ${c_title}_LOG (

            `c_id`                      bigint(20) NOT NULL COMMENT '노드 아이디',
            `c_parentid`                bigint(20) NOT NULL COMMENT '부모 노드 아이디',
            `c_position`                bigint(20) NOT NULL COMMENT '노드 포지션',
            `c_left`                    bigint(20) NOT NULL COMMENT '노드 좌측 끝 포인트',
            `c_right`                   bigint(20) NOT NULL COMMENT '노드 우측 끝 포인트',
            `c_level`                   bigint(20) NOT NULL COMMENT '노드 DEPTH',
            `c_title`                   VARCHAR(255) COMMENT '노드 명',
            `c_type`                    VARCHAR(255) COMMENT '노드 타입',

            `c_method`                  text NULL COMMENT '노드 변경 행위',
            `c_state`                   text NULL COMMENT '노드 상태값 ( 이전인지. 이후인지)',
            `c_date`                    date NULL COMMENT '노드 변경 시',

            `c_req_pdservice_link`              bigint(20) NULL,
            `c_req_pdservice_versionset_link`   text NULL,

            `c_req_reviewer01`          text NULL,
            `c_req_reviewer01_status`   text NULL,
            `c_req_reviewer02`          text NULL,
            `c_req_reviewer02_status`   text NULL,
            `c_req_reviewer03`          text NULL,
            `c_req_reviewer03_status`   text NULL,
            `c_req_reviewer04`          text NULL,
            `c_req_reviewer04_status`   text NULL,
            `c_req_reviewer05`          text NULL,
            `c_req_reviewer05_status`   text NULL,
            `c_req_writer`              text NULL,
            `c_req_create_date`         text NULL,
            `c_req_update_date`         text NULL,
            `c_req_etc`                 varchar(255)    COMMENT '비고',
            `c_req_desc`                text            COMMENT '설명',
            `c_req_contents`            longtext        COMMENT '내용'

        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='요구사항 테이블 로그';

    </update>

    <update id="ddlOrgExecute" parameterType="com.arms.util.dynamicdbmaker.model.DynamicDBMakerEntity">

        CREATE TABLE IF NOT EXISTS ${c_title} (

            `c_id`                      bigint(20) AUTO_INCREMENT primary key COMMENT '노드 아이디',
            `c_parentid`                bigint(20) NOT NULL COMMENT '부모 노드 아이디',
            `c_position`                bigint(20) NOT NULL COMMENT '노드 포지션',
            `c_left`                    bigint(20) NOT NULL COMMENT '노드 좌측 끝 포인트',
            `c_right`                   bigint(20) NOT NULL COMMENT '노드 우측 끝 포인트',
            `c_level`                   bigint(20) NOT NULL COMMENT '노드 DEPTH',
            `c_title`                   VARCHAR(255) COMMENT '노드 명',
            `c_type`                    VARCHAR(255) COMMENT '노드 타입',

            `c_req_pdservice_link`              bigint(20) NULL,
            `c_req_pdservice_versionset_link`   text NULL,

            `c_req_reviewer01`          text NULL,
            `c_req_reviewer01_status`   text NULL,
            `c_req_reviewer02`          text NULL,
            `c_req_reviewer02_status`   text NULL,
            `c_req_reviewer03`          text NULL,
            `c_req_reviewer03_status`   text NULL,
            `c_req_reviewer04`          text NULL,
            `c_req_reviewer04_status`   text NULL,
            `c_req_reviewer05`          text NULL,
            `c_req_reviewer05_status`   text NULL,
            `c_req_writer`              text NULL,
            `c_req_create_date`         text NULL,
            `c_req_update_date`         text NULL,
            `c_req_etc`                 varchar(255)    COMMENT '비고',
            `c_req_desc`                text            COMMENT '설명',
            `c_req_contents`            longtext        COMMENT '내용'

        ) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='요구사항 테이블';

    </update>


    <update id="dmlOrgExecute1" parameterType="com.arms.util.dynamicdbmaker.model.DynamicDBMakerEntity">
        Insert into ${c_title} (C_ID, C_PARENTID, C_POSITION, C_LEFT, C_RIGHT, C_LEVEL, C_TITLE, C_TYPE)
        Values (1, 0, 0, 1, 4, 0, 'REQADD Table', 'root');
    </update>
    <update id="dmlOrgExecute2" parameterType="com.arms.util.dynamicdbmaker.model.DynamicDBMakerEntity">
        Insert into ${c_title} (C_ID, C_PARENTID, C_POSITION, C_LEFT, C_RIGHT, C_LEVEL, C_TITLE, C_TYPE)
        Values (2, 1, 0, 2, 3, 1, '요구사항', 'drive');
    </update>


    <update id="triggerInsertExecute" parameterType="com.arms.util.dynamicdbmaker.model.DynamicDBMakerEntity">
        CREATE TRIGGER TG_INSERT_${c_title}
            BEFORE  INSERT ON ${c_title}
            FOR EACH ROW
        BEGIN
            insert into ${c_title}_LOG (C_ID, C_PARENTID, C_POSITION, C_LEFT, C_RIGHT, C_LEVEL, C_TITLE, C_TYPE, C_METHOD, C_STATE, C_DATE)
            values (NEW.C_ID,NEW.C_PARENTID,NEW.C_POSITION,NEW.C_LEFT,NEW.C_RIGHT,NEW.C_LEVEL,NEW.C_TITLE,NEW.C_TYPE,'update','변경이전데이터',now());
        END;
    </update>

    <update id="triggerUpdateExecute" parameterType="com.arms.util.dynamicdbmaker.model.DynamicDBMakerEntity">
        CREATE TRIGGER TG_UPDATE_${c_title}
            BEFORE  UPDATE ON ${c_title}
            FOR EACH ROW
        BEGIN
            insert into ${c_title}_LOG (C_ID, C_PARENTID, C_POSITION, C_LEFT, C_RIGHT, C_LEVEL, C_TITLE, C_TYPE, C_METHOD, C_STATE, C_DATE)
            values (OLD.C_ID,OLD.C_PARENTID,OLD.C_POSITION,OLD.C_LEFT,OLD.C_RIGHT,OLD.C_LEVEL,OLD.C_TITLE,OLD.C_TYPE,'update','변경이전데이터',now());
            insert into ${c_title}_LOG (C_ID, C_PARENTID, C_POSITION, C_LEFT, C_RIGHT, C_LEVEL, C_TITLE, C_TYPE, C_METHOD, C_STATE, C_DATE)
            values (NEW.C_ID,NEW.C_PARENTID,NEW.C_POSITION,NEW.C_LEFT,NEW.C_RIGHT,NEW.C_LEVEL,NEW.C_TITLE,NEW.C_TYPE,'update','변경이후데이터',now());
        END;
    </update>

    <update id="triggerDeleteExecute" parameterType="com.arms.util.dynamicdbmaker.model.DynamicDBMakerEntity">
        CREATE TRIGGER TG_DELETE_${c_title}
            BEFORE  DELETE ON ${c_title}
            FOR EACH ROW
        BEGIN
            insert into ${c_title}_LOG (C_ID, C_PARENTID, C_POSITION, C_LEFT, C_RIGHT, C_LEVEL, C_TITLE, C_TYPE, C_METHOD, C_STATE, C_DATE)
            values (OLD.C_ID,OLD.C_PARENTID,OLD.C_POSITION,OLD.C_LEFT,OLD.C_RIGHT,OLD.C_LEVEL,OLD.C_TITLE,OLD.C_TYPE,'delete','삭제된데이터',now());
        END;
    </update>


</mapper>